
MotorControl_2018.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000002  00800100  00000390  00000424  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000390  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  00800102  00800102  00000426  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000426  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000458  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a0  00000000  00000000  00000498  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001083  00000000  00000000  00000538  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000cc3  00000000  00000000  000015bb  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000847  00000000  00000000  0000227e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000260  00000000  00000000  00002ac8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000006ff  00000000  00000000  00002d28  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000073c  00000000  00000000  00003427  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000080  00000000  00000000  00003b63  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__ctors_end>
   4:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
   8:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
   c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  10:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  14:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  18:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  1c:	0c 94 ef 00 	jmp	0x1de	; 0x1de <__vector_7>
  20:	0c 94 21 01 	jmp	0x242	; 0x242 <__vector_8>
  24:	0c 94 53 01 	jmp	0x2a6	; 0x2a6 <__vector_9>
  28:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  2c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  30:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  34:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  38:	0c 94 8a 01 	jmp	0x314	; 0x314 <__vector_14>
  3c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  40:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  44:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  48:	0c 94 a2 00 	jmp	0x144	; 0x144 <__vector_18>
  4c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  50:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  54:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  58:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  5c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  60:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  64:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  68:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  6c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  70:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  74:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  78:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>

0000007c <__ctors_end>:
  7c:	11 24       	eor	r1, r1
  7e:	1f be       	out	0x3f, r1	; 63
  80:	cf ef       	ldi	r28, 0xFF	; 255
  82:	d0 e1       	ldi	r29, 0x10	; 16
  84:	de bf       	out	0x3e, r29	; 62
  86:	cd bf       	out	0x3d, r28	; 61

00000088 <__do_copy_data>:
  88:	11 e0       	ldi	r17, 0x01	; 1
  8a:	a0 e0       	ldi	r26, 0x00	; 0
  8c:	b1 e0       	ldi	r27, 0x01	; 1
  8e:	e0 e9       	ldi	r30, 0x90	; 144
  90:	f3 e0       	ldi	r31, 0x03	; 3
  92:	02 c0       	rjmp	.+4      	; 0x98 <__do_copy_data+0x10>
  94:	05 90       	lpm	r0, Z+
  96:	0d 92       	st	X+, r0
  98:	a2 30       	cpi	r26, 0x02	; 2
  9a:	b1 07       	cpc	r27, r17
  9c:	d9 f7       	brne	.-10     	; 0x94 <__do_copy_data+0xc>

0000009e <__do_clear_bss>:
  9e:	21 e0       	ldi	r18, 0x01	; 1
  a0:	a2 e0       	ldi	r26, 0x02	; 2
  a2:	b1 e0       	ldi	r27, 0x01	; 1
  a4:	01 c0       	rjmp	.+2      	; 0xa8 <.do_clear_bss_start>

000000a6 <.do_clear_bss_loop>:
  a6:	1d 92       	st	X+, r1

000000a8 <.do_clear_bss_start>:
  a8:	a6 30       	cpi	r26, 0x06	; 6
  aa:	b2 07       	cpc	r27, r18
  ac:	e1 f7       	brne	.-8      	; 0xa6 <.do_clear_bss_loop>
  ae:	0e 94 ae 01 	call	0x35c	; 0x35c <main>
  b2:	0c 94 c6 01 	jmp	0x38c	; 0x38c <_exit>

000000b6 <__bad_interrupt>:
  b6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ba <CAN_RXInit>:
  ba:	cf 92       	push	r12
  bc:	df 92       	push	r13
  be:	ef 92       	push	r14
  c0:	ff 92       	push	r15
  c2:	0f 93       	push	r16
  c4:	1f 93       	push	r17
  c6:	82 95       	swap	r24
  c8:	80 7f       	andi	r24, 0xF0	; 240
  ca:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
  ce:	10 92 f4 00 	sts	0x00F4, r1	; 0x8000f4 <__TEXT_REGION_LENGTH__+0x7e00f4>
  d2:	10 92 f5 00 	sts	0x00F5, r1	; 0x8000f5 <__TEXT_REGION_LENGTH__+0x7e00f5>
  d6:	82 2f       	mov	r24, r18
  d8:	82 95       	swap	r24
  da:	88 0f       	add	r24, r24
  dc:	80 7e       	andi	r24, 0xE0	; 224
  de:	80 93 f6 00 	sts	0x00F6, r24	; 0x8000f6 <__TEXT_REGION_LENGTH__+0x7e00f6>
  e2:	da 01       	movw	r26, r20
  e4:	c9 01       	movw	r24, r18
  e6:	68 94       	set
  e8:	12 f8       	bld	r1, 2
  ea:	b6 95       	lsr	r27
  ec:	a7 95       	ror	r26
  ee:	97 95       	ror	r25
  f0:	87 95       	ror	r24
  f2:	16 94       	lsr	r1
  f4:	d1 f7       	brne	.-12     	; 0xea <CAN_RXInit+0x30>
  f6:	80 93 f7 00 	sts	0x00F7, r24	; 0x8000f7 <__TEXT_REGION_LENGTH__+0x7e00f7>
  fa:	10 92 f0 00 	sts	0x00F0, r1	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7e00f0>
  fe:	10 92 f1 00 	sts	0x00F1, r1	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
 102:	8e 2d       	mov	r24, r14
 104:	82 95       	swap	r24
 106:	88 0f       	add	r24, r24
 108:	80 7e       	andi	r24, 0xE0	; 224
 10a:	80 93 f2 00 	sts	0x00F2, r24	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7e00f2>
 10e:	d8 01       	movw	r26, r16
 110:	c7 01       	movw	r24, r14
 112:	68 94       	set
 114:	12 f8       	bld	r1, 2
 116:	b6 95       	lsr	r27
 118:	a7 95       	ror	r26
 11a:	97 95       	ror	r25
 11c:	87 95       	ror	r24
 11e:	16 94       	lsr	r1
 120:	d1 f7       	brne	.-12     	; 0x116 <CAN_RXInit+0x5c>
 122:	80 93 f3 00 	sts	0x00F3, r24	; 0x8000f3 <__TEXT_REGION_LENGTH__+0x7e00f3>
 126:	80 e1       	ldi	r24, 0x10	; 16
 128:	c8 9e       	mul	r12, r24
 12a:	60 01       	movw	r12, r0
 12c:	11 24       	eor	r1, r1
 12e:	60 68       	ori	r22, 0x80	; 128
 130:	c6 2a       	or	r12, r22
 132:	c0 92 ef 00 	sts	0x00EF, r12	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7e00ef>
 136:	1f 91       	pop	r17
 138:	0f 91       	pop	r16
 13a:	ff 90       	pop	r15
 13c:	ef 90       	pop	r14
 13e:	df 90       	pop	r13
 140:	cf 90       	pop	r12
 142:	08 95       	ret

00000144 <__vector_18>:
		startPhase = 5;
		break;
		case 6:
		PHASE_V_LOW_ON;
		PHASE_U_HIGH_ON;
		startPhase = 6;
 144:	1f 92       	push	r1
 146:	0f 92       	push	r0
 148:	0f b6       	in	r0, 0x3f	; 63
 14a:	0f 92       	push	r0
 14c:	11 24       	eor	r1, r1
 14e:	cf 92       	push	r12
 150:	ef 92       	push	r14
 152:	ff 92       	push	r15
 154:	0f 93       	push	r16
 156:	1f 93       	push	r17
 158:	2f 93       	push	r18
 15a:	3f 93       	push	r19
 15c:	4f 93       	push	r20
 15e:	5f 93       	push	r21
 160:	6f 93       	push	r22
 162:	7f 93       	push	r23
 164:	8f 93       	push	r24
 166:	9f 93       	push	r25
 168:	af 93       	push	r26
 16a:	bf 93       	push	r27
 16c:	ef 93       	push	r30
 16e:	ff 93       	push	r31
 170:	80 91 e0 00 	lds	r24, 0x00E0	; 0x8000e0 <__TEXT_REGION_LENGTH__+0x7e00e0>
 174:	85 ff       	sbrs	r24, 5
 176:	1d c0       	rjmp	.+58     	; 0x1b2 <__vector_18+0x6e>
 178:	80 e5       	ldi	r24, 0x50	; 80
 17a:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
 17e:	ea ef       	ldi	r30, 0xFA	; 250
 180:	f0 e0       	ldi	r31, 0x00	; 0
 182:	80 81       	ld	r24, Z
 184:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <testChar>
 188:	80 81       	ld	r24, Z
 18a:	80 81       	ld	r24, Z
 18c:	80 81       	ld	r24, Z
 18e:	80 81       	ld	r24, Z
 190:	80 81       	ld	r24, Z
 192:	80 81       	ld	r24, Z
 194:	80 81       	ld	r24, Z
 196:	cc 24       	eor	r12, r12
 198:	c3 94       	inc	r12
 19a:	e1 2c       	mov	r14, r1
 19c:	f1 2c       	mov	r15, r1
 19e:	00 e0       	ldi	r16, 0x00	; 0
 1a0:	14 e0       	ldi	r17, 0x04	; 4
 1a2:	20 e0       	ldi	r18, 0x00	; 0
 1a4:	30 e0       	ldi	r19, 0x00	; 0
 1a6:	40 e0       	ldi	r20, 0x00	; 0
 1a8:	54 e0       	ldi	r21, 0x04	; 4
 1aa:	68 e0       	ldi	r22, 0x08	; 8
 1ac:	85 e0       	ldi	r24, 0x05	; 5
 1ae:	0e 94 5d 00 	call	0xba	; 0xba <CAN_RXInit>
 1b2:	ff 91       	pop	r31
 1b4:	ef 91       	pop	r30
 1b6:	bf 91       	pop	r27
 1b8:	af 91       	pop	r26
 1ba:	9f 91       	pop	r25
 1bc:	8f 91       	pop	r24
 1be:	7f 91       	pop	r23
 1c0:	6f 91       	pop	r22
 1c2:	5f 91       	pop	r21
 1c4:	4f 91       	pop	r20
 1c6:	3f 91       	pop	r19
 1c8:	2f 91       	pop	r18
 1ca:	1f 91       	pop	r17
 1cc:	0f 91       	pop	r16
 1ce:	ff 90       	pop	r15
 1d0:	ef 90       	pop	r14
 1d2:	cf 90       	pop	r12
 1d4:	0f 90       	pop	r0
 1d6:	0f be       	out	0x3f, r0	; 63
 1d8:	0f 90       	pop	r0
 1da:	1f 90       	pop	r1
 1dc:	18 95       	reti

000001de <__vector_7>:
 1de:	1f 92       	push	r1
 1e0:	0f 92       	push	r0
 1e2:	0f b6       	in	r0, 0x3f	; 63
 1e4:	0f 92       	push	r0
 1e6:	11 24       	eor	r1, r1
 1e8:	8f 93       	push	r24
 1ea:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <__data_end+0x1>
 1ee:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <__data_end>
 1f2:	10 92 b6 00 	sts	0x00B6, r1	; 0x8000b6 <__TEXT_REGION_LENGTH__+0x7e00b6>
 1f6:	58 98       	cbi	0x0b, 0	; 11
 1f8:	40 98       	cbi	0x08, 0	; 8
 1fa:	28 98       	cbi	0x05, 0	; 5
 1fc:	4e 9b       	sbis	0x09, 6	; 9
 1fe:	0e c0       	rjmp	.+28     	; 0x21c <__vector_7+0x3e>
 200:	58 9a       	sbi	0x0b, 0	; 11
 202:	80 e3       	ldi	r24, 0x30	; 48
 204:	80 93 b6 00 	sts	0x00B6, r24	; 0x8000b6 <__TEXT_REGION_LENGTH__+0x7e00b6>
 208:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 20c:	83 30       	cpi	r24, 0x03	; 3
 20e:	99 f4       	brne	.+38     	; 0x236 <__vector_7+0x58>
 210:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <revolutions>
 214:	8f 5f       	subi	r24, 0xFF	; 255
 216:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <revolutions>
 21a:	0d c0       	rjmp	.+26     	; 0x236 <__vector_7+0x58>
 21c:	28 9a       	sbi	0x05, 0	; 5
 21e:	83 e0       	ldi	r24, 0x03	; 3
 220:	80 93 b6 00 	sts	0x00B6, r24	; 0x8000b6 <__TEXT_REGION_LENGTH__+0x7e00b6>
 224:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 228:	84 30       	cpi	r24, 0x04	; 4
 22a:	29 f4       	brne	.+10     	; 0x236 <__vector_7+0x58>
 22c:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <revolutions>
 230:	8f 5f       	subi	r24, 0xFF	; 255
 232:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <revolutions>
 236:	8f 91       	pop	r24
 238:	0f 90       	pop	r0
 23a:	0f be       	out	0x3f, r0	; 63
 23c:	0f 90       	pop	r0
 23e:	1f 90       	pop	r1
 240:	18 95       	reti

00000242 <__vector_8>:
 242:	1f 92       	push	r1
 244:	0f 92       	push	r0
 246:	0f b6       	in	r0, 0x3f	; 63
 248:	0f 92       	push	r0
 24a:	11 24       	eor	r1, r1
 24c:	8f 93       	push	r24
 24e:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <__data_end+0x1>
 252:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <__data_end>
 256:	10 92 b6 00 	sts	0x00B6, r1	; 0x8000b6 <__TEXT_REGION_LENGTH__+0x7e00b6>
 25a:	58 98       	cbi	0x0b, 0	; 11
 25c:	40 98       	cbi	0x08, 0	; 8
 25e:	28 98       	cbi	0x05, 0	; 5
 260:	1a 9b       	sbis	0x03, 2	; 3
 262:	0e c0       	rjmp	.+28     	; 0x280 <__vector_8+0x3e>
 264:	40 9a       	sbi	0x08, 0	; 8
 266:	83 e0       	ldi	r24, 0x03	; 3
 268:	80 93 b6 00 	sts	0x00B6, r24	; 0x8000b6 <__TEXT_REGION_LENGTH__+0x7e00b6>
 26c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 270:	86 30       	cpi	r24, 0x06	; 6
 272:	99 f4       	brne	.+38     	; 0x29a <__vector_8+0x58>
 274:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <revolutions>
 278:	8f 5f       	subi	r24, 0xFF	; 255
 27a:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <revolutions>
 27e:	0d c0       	rjmp	.+26     	; 0x29a <__vector_8+0x58>
 280:	58 9a       	sbi	0x0b, 0	; 11
 282:	8c e0       	ldi	r24, 0x0C	; 12
 284:	80 93 b6 00 	sts	0x00B6, r24	; 0x8000b6 <__TEXT_REGION_LENGTH__+0x7e00b6>
 288:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 28c:	81 30       	cpi	r24, 0x01	; 1
 28e:	29 f4       	brne	.+10     	; 0x29a <__vector_8+0x58>
 290:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <revolutions>
 294:	8f 5f       	subi	r24, 0xFF	; 255
 296:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <revolutions>
 29a:	8f 91       	pop	r24
 29c:	0f 90       	pop	r0
 29e:	0f be       	out	0x3f, r0	; 63
 2a0:	0f 90       	pop	r0
 2a2:	1f 90       	pop	r1
 2a4:	18 95       	reti

000002a6 <__vector_9>:
 2a6:	1f 92       	push	r1
 2a8:	0f 92       	push	r0
 2aa:	0f b6       	in	r0, 0x3f	; 63
 2ac:	0f 92       	push	r0
 2ae:	11 24       	eor	r1, r1
 2b0:	8f 93       	push	r24
 2b2:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <__data_end+0x1>
 2b6:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <__data_end>
 2ba:	10 92 b6 00 	sts	0x00B6, r1	; 0x8000b6 <__TEXT_REGION_LENGTH__+0x7e00b6>
 2be:	58 98       	cbi	0x0b, 0	; 11
 2c0:	40 98       	cbi	0x08, 0	; 8
 2c2:	28 98       	cbi	0x05, 0	; 5
 2c4:	1d 9b       	sbis	0x03, 5	; 3
 2c6:	0e c0       	rjmp	.+28     	; 0x2e4 <__vector_9+0x3e>
 2c8:	28 9a       	sbi	0x05, 0	; 5
 2ca:	8c e0       	ldi	r24, 0x0C	; 12
 2cc:	80 93 b6 00 	sts	0x00B6, r24	; 0x8000b6 <__TEXT_REGION_LENGTH__+0x7e00b6>
 2d0:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 2d4:	85 30       	cpi	r24, 0x05	; 5
 2d6:	99 f4       	brne	.+38     	; 0x2fe <__vector_9+0x58>
 2d8:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <revolutions>
 2dc:	8f 5f       	subi	r24, 0xFF	; 255
 2de:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <revolutions>
 2e2:	0d c0       	rjmp	.+26     	; 0x2fe <__vector_9+0x58>
 2e4:	40 9a       	sbi	0x08, 0	; 8
 2e6:	80 e3       	ldi	r24, 0x30	; 48
 2e8:	80 93 b6 00 	sts	0x00B6, r24	; 0x8000b6 <__TEXT_REGION_LENGTH__+0x7e00b6>
 2ec:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 2f0:	82 30       	cpi	r24, 0x02	; 2
 2f2:	29 f4       	brne	.+10     	; 0x2fe <__vector_9+0x58>
 2f4:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <revolutions>
 2f8:	8f 5f       	subi	r24, 0xFF	; 255
 2fa:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <revolutions>
 2fe:	8f 91       	pop	r24
 300:	0f 90       	pop	r0
 302:	0f be       	out	0x3f, r0	; 63
 304:	0f 90       	pop	r0
 306:	1f 90       	pop	r1
 308:	18 95       	reti

0000030a <toggle_led>:
{		// ((? & 100000) / 8) +  ((? & 100) / 2)   + ((? & 1000000) / 64)
	return (((PINB & 32) / 8) + ((PINB & 4) / 2) + ((PIND & 64) / 64));
}

void toggle_led(void){
	PORTB ^= 0b00001000;
 30a:	95 b1       	in	r25, 0x05	; 5
 30c:	88 e0       	ldi	r24, 0x08	; 8
 30e:	89 27       	eor	r24, r25
 310:	85 b9       	out	0x05, r24	; 5
 312:	08 95       	ret

00000314 <__vector_14>:
		
	}
}

ISR(TIMER1_OVF_vect)
{
 314:	1f 92       	push	r1
 316:	0f 92       	push	r0
 318:	0f b6       	in	r0, 0x3f	; 63
 31a:	0f 92       	push	r0
 31c:	11 24       	eor	r1, r1
 31e:	2f 93       	push	r18
 320:	3f 93       	push	r19
 322:	4f 93       	push	r20
 324:	5f 93       	push	r21
 326:	6f 93       	push	r22
 328:	7f 93       	push	r23
 32a:	8f 93       	push	r24
 32c:	9f 93       	push	r25
 32e:	af 93       	push	r26
 330:	bf 93       	push	r27
 332:	ef 93       	push	r30
 334:	ff 93       	push	r31
	toggle_led();
 336:	0e 94 85 01 	call	0x30a	; 0x30a <toggle_led>
}
 33a:	ff 91       	pop	r31
 33c:	ef 91       	pop	r30
 33e:	bf 91       	pop	r27
 340:	af 91       	pop	r26
 342:	9f 91       	pop	r25
 344:	8f 91       	pop	r24
 346:	7f 91       	pop	r23
 348:	6f 91       	pop	r22
 34a:	5f 91       	pop	r21
 34c:	4f 91       	pop	r20
 34e:	3f 91       	pop	r19
 350:	2f 91       	pop	r18
 352:	0f 90       	pop	r0
 354:	0f be       	out	0x3f, r0	; 63
 356:	0f 90       	pop	r0
 358:	1f 90       	pop	r1
 35a:	18 95       	reti

0000035c <main>:
	// Set up clock source according to configuration
	ASSR = TC_TIMEOUT_ASSR_MASK;
	*/
	
	//DDRB |= 0b00001000;				// make the status LED an output
	DDRB |= (1<<DDB5);
 35c:	25 9a       	sbi	0x04, 5	; 4
	DDRB &= ~(1<<DDB7);
 35e:	27 98       	cbi	0x04, 7	; 4

	TCCR1B |= (1<<CS12);
 360:	e1 e8       	ldi	r30, 0x81	; 129
 362:	f0 e0       	ldi	r31, 0x00	; 0
 364:	80 81       	ld	r24, Z
 366:	84 60       	ori	r24, 0x04	; 4
 368:	80 83       	st	Z, r24
	TIMSK1 |= (1<TOIE1);
 36a:	ef e6       	ldi	r30, 0x6F	; 111
 36c:	f0 e0       	ldi	r31, 0x00	; 0
 36e:	80 81       	ld	r24, Z
 370:	80 83       	st	Z, r24

	// start the interrupts
	sei();
 372:	78 94       	sei
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 374:	2f ef       	ldi	r18, 0xFF	; 255
 376:	83 ed       	ldi	r24, 0xD3	; 211
 378:	90 e3       	ldi	r25, 0x30	; 48
 37a:	21 50       	subi	r18, 0x01	; 1
 37c:	80 40       	sbci	r24, 0x00	; 0
 37e:	90 40       	sbci	r25, 0x00	; 0
 380:	e1 f7       	brne	.-8      	; 0x37a <main+0x1e>
 382:	00 c0       	rjmp	.+0      	; 0x384 <main+0x28>
 384:	00 00       	nop

	while(1){
	_delay_ms(1000);
	toggle_led();
 386:	0e 94 85 01 	call	0x30a	; 0x30a <toggle_led>
 38a:	f4 cf       	rjmp	.-24     	; 0x374 <main+0x18>

0000038c <_exit>:
 38c:	f8 94       	cli

0000038e <__stop_program>:
 38e:	ff cf       	rjmp	.-2      	; 0x38e <__stop_program>
